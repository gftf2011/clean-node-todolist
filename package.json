{
  "name": "clean-node-todolist",
  "version": "1.0.0",
  "description": "Node.Js API built with Clean Architecture and Design Patterns that runs in REST and Graphql at the same time",
  "main": "dist/main/server/index.js",
  "scripts": {
    "docker:up": "docker-compose up -d --remove-orphans",
    "docker:down": "docker-compose down",
    "docker:clear": "docker-compose down && docker image prune -a -f && docker volume prune -f",
    "build:docker:test": "rm -rf docker-compose.yml && cat docker/test/docker-compose.yml >> docker-compose.yml",
    "build:docker:dev": "rm -rf docker-compose.yml && cat docker/dev/docker-compose.yml >> docker-compose.yml",
    "script:exec:test": "chmod +x ./scripts/test/postgres/init.sh",
    "script:exec:dev": "chmod +x ./scripts/dev/postgres/init.sh",
    "prerun:docker:test": "npm run docker:clear || true",
    "run:docker:test": "npm run script:exec:test && npm run build:docker:test",
    "postrun:docker:test": "npm run docker:up",
    "prerun:docker:dev": "npm run docker:clear || true",
    "run:docker:dev": "npm run script:exec:dev && npm run build:docker:dev",
    "postrun:docker:dev": "npm run docker:up",
    "env:test": "rm -rf .env && cat ./env/test/.env >> .env",
    "env:dev": "rm -rf .env && cat ./env/dev/.env >> .env",
    "pretest": "npm run env:test && npm run run:docker:test",
    "test": "jest --clearCache ; jest --colors --coverage --verbose --detectOpenHandles --config jest.config.js",
    "posttest": "npm run docker:clear",
    "pretest:coverage": "npm run env:test && npm run run:docker:test",
    "test:coverage": "jest --clearCache ; jest --colors --coverage --verbose --detectOpenHandles --config jest.config.js && coveralls < coverage/lcov.info",
    "posttest:coverage": "npm run docker:clear",
    "test:unit": "jest --clearCache ; jest --colors --coverage --verbose --detectOpenHandles --config jest-unit.config.js",
    "pretest:integration": "npm run env:test && npm run run:docker:test",
    "test:integration": "jest --clearCache ; jest --colors --coverage --verbose --detectOpenHandles --config jest-integration.config.js",
    "posttest:integration": "npm run docker:clear",
    "pretest:e2e": "npm run env:test && npm run run:docker:test",
    "test:e2e": "jest --clearCache ; jest --colors --coverage --verbose --detectOpenHandles --config jest-e2e.config.js",
    "posttest:e2e": "npm run docker:clear",
    "linting": "npx eslint --fix . --ext .ts",
    "build": "rm -rf dist && tsc -p tsconfig-build.json",
    "prestart:dev": "npm run env:dev && npm run build && npm run run:docker:dev",
    "start:dev": "node dist/main/server/index.js"
  },
  "keywords": ["nodejs", "javascript", "graphql", "docker", "dockerfile", "coveralls", "typescript", "rest", "docker-compose", "test", "rest-api", "clean-code", "postgresql", "design-patterns", "clean-architecture", "sonar", "sonarcloud", "cqs", "github-actions"],
  "author": "Gabriel Ferrari Tarallo Ferraz",
  "devDependencies": {
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/faker": "5.5.9",
    "@types/graphql": "^14.5.0",
    "@types/jest": "~27.4.1",
    "@types/jsonwebtoken": "^8.5.9",
    "@types/node": "^18.0.3",
    "@types/pg": "^8.6.5",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^8.3.4",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "cpf-cnpj-validator": "^1.0.3",
    "eslint": "^8.19.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-import-resolver-typescript": "^3.2.5",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-n": "^15.2.4",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-promise": "^6.0.0",
    "faker": "5.5.3",
    "jest": "~29.5.0",
    "prettier": "^2.7.1",
    "supertest": "^6.3.2",
    "ts-jest": "~29.1.0",
    "typescript": "^4.6.2"
  },
  "dependencies": {
    "@apollo/server": "^4.7.1",
    "@graphql-tools/schema": "^9.0.19",
    "@graphql-tools/utils": "^9.2.1",
    "cors": "^2.8.5",
    "dotenv": "^16.0.0",
    "express": "^4.17.3",
    "graphql": "^16.6.0",
    "graphql-scalars": "^1.21.3",
    "helmet": "^6.0.0",
    "jsonwebtoken": "^9.0.0",
    "pg": "^8.8.0",
    "uuid": "^9.0.0"
  },
  "license": "MIT"
}
